class Solution {
public:
    long long find_time(vector<int>& piles, int speed)
    {
        long long time=0;
        for(int i=0;i<piles.size();i++)
        {
            time+= ceil((piles[i]*1.0)/(speed*1.0));
        }
        
        return time;
    }

    int minEatingSpeed(vector<int>& piles, int h) {
        long long n=piles.size();
        
        long long min_speed=1;
        long long max_speed =0;
        for(int i=0;i<n;i++)
        {
            max_speed=max(max_speed,(long long)piles[i]);
        }
        
        long long ans=0;
        
        while(max_speed>=min_speed){
            long long mid_speed= (max_speed +min_speed)/2;
            if(find_time(piles,mid_speed) <= h)
                {
                ans= mid_speed;
                max_speed = mid_speed-1;
                }
            else{
                min_speed = mid_speed +1;
                }
        }       
        return ans;
    }
};



        



