class Solution {
public:
    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {
        queue<pair<string,int>>q;
        q.push({beginWord,1});

        unordered_set<string> st;    // set O(1) me khoj ke dega strings updation ke baad thats why using set
        st.insert(wordList.begin(),wordList.end());
        st.erase(beginWord);

        while(!q.empty()){
            string word=q.front().first;
            int steps=q.front().second;
            q.pop();
            if(word==endWord) return steps;

            for(int i=0;i<word.size();i++){
                char original=word[i];
                for(char ch='a';ch<='z';ch++){  // ek ek krke string ke har char ko change krenge a to z 
                    word[i]=ch;
                    // agar set me khoja aur mil gya tb 
                    if(st.find(word) != st.end()){
                        st.erase(word);
                        q.push({word,steps+1});
                    }
                }
                word[i]=original;  // important step
            }
        }
        return 0;
    }
};
